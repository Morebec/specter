package specter

type ProcessingContext struct {
	DependencyGraph ResolvedDependencies
	Outputs         []ProcessingOutput
	Logger          Logger
}

// Output returns the output associated with a given processor.
func (c ProcessingContext) Output(outputName string) ProcessingOutput {
	for _, o := range c.Outputs {
		if o.Name == outputName {
			return o
		}
	}
	return ProcessingOutput{Name: outputName, Value: nil}
}

// ProcessingOutput represents an output generated by a SpecificationProcessor.
type ProcessingOutput struct {
	// Name of the Output
	Name string

	// Value of the output
	Value any
}

// SpecificationProcessor are services responsible for performing work using Specifications.
type SpecificationProcessor interface {
	// Name returns the unique FilePath of this processor.
	Name() string

	// Process processes a group of specifications.
	Process(ctx ProcessingContext) ([]ProcessingOutput, error)
}

type OutputProcessingContext struct {
	DependencyGraph ResolvedDependencies
	Outputs         []ProcessingOutput
	Logger          Logger
}

// OutputProcessor are services responsible for processing outputs of SpecProcessors.
type OutputProcessor interface {
	// Process performs the processing of outputs generated by SpecificationProcessor.
	Process(ctx OutputProcessingContext) error

	// Name returns the name of this processor.
	Name() string
}
